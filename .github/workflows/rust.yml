name: Rust

on:
  push:
    branches: ["ci", "main"]
  pull_request:
    branches: ["ci"]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-debug:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -C link-arg=-s

    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo dependencies
        id: cache-cargo-deps
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-deps
      - name: Install MUSL toolchain
        run: |
          sudo apt-get install -yqq --no-install-recommends build-essential
          sudo apt-get install -yqq musl-tools
          rustup target add x86_64-unknown-linux-musl
      - name: Build
        run: cargo build --verbose --target x86_64-unknown-linux-musl
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cargo-build-debug
          path: target/x86_64-unknown-linux-musl/debug/

  build-release:
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    needs: build-debug

    steps:
      - uses: actions/checkout@v4
      - name: Install MUSL toolchain
        run: |
          sudo apt-get install -yqq --no-install-recommends build-essential
          sudo apt-get install -yqq musl-tools
          rustup target add x86_64-unknown-linux-musl
      - name: Build Release Binary
        run: cargo build --release --verbose --target x86_64-unknown-linux-musl
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cargo-build-release
          path: target/x86_64-unknown-linux-musl/release/

  build-docker:
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    needs: build-release
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker Image
        run: |
          echo "yo"

  test:
    # This job is separate and depends on the build job.
    runs-on: ubuntu-latest
    needs: build-debug

    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo dependencies
        id: cache-cargo-deps
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-deps
          restore-keys: |
            ${{ runner.os }}-cargo-deps
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: cargo-build-debug
          path: target/x86_64-unknown-linux-musl/debug/
      - name: Run tests
        run: cargo test --verbose

  # semantic_release:
  #   # This job runs on every push to 'main' branch after a successful build and test.
  #   if: github.ref == 'refs/heads/ci'
  #   runs-on: ubuntu-latest
  #   needs: [build, test]
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Dependencies
  #       run: npm install
  #     - name: Run Semantic Release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: npx semantic-release
